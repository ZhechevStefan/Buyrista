version: '3.9'
services:
  db:
    image: ${PROJECT_ID}-db:dev
    ports:
      - '55432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    networks:
      basicbridge:
        ipv4_address: '10.8.0.2'
    volumes:
      - '/home/${USER}/Development/data/${PROJECT_ID}:/var/lib/postgresql/data'
    command: 'postgres -c shared_buffers=256MB -c max_connections=400'
  load-balancer:
    image: '${PROJECT_ID}-load-balancer:dev'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
      - '3000:3000'
      - '8080:8080'
      - '8081:8081'
    environment:
      - DOMAIN_SUFFIX=${DOMAIN_SUFFIX}
    networks:
      basicbridge:
        ipv4_address: '10.8.0.3'
    command: bash -c "envsubst '$${DOMAIN_SUFFIX}' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && /usr/bin/openresty -g 'daemon off;'"
  api:
    image: '${PROJECT_ID}-node:dev'
    networks:
      basicbridge:
        ipv4_address: '10.8.0.4'
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - SERVICE_NAME=api
      - FRONTEND_HOST=10.8.0.5
      - DB_SCHEMA=main
      - SESSION_COOKIE_NAME=session
    working_dir: /home/node/app/packages/api
    user: 'node'
    volumes:
      - '/home/${USER}/Development/repos/${PROJECT_ID}:/home/node/app'
    depends_on:
      - 'db'
    command: '/home/node/start.sh'
  web-app:
    image: '${PROJECT_ID}-node:dev'
    networks:
      basicbridge:
        ipv4_address: '10.8.0.5'
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=web-app
    working_dir: /home/node/app/packages/ui
    user: 'node'
    volumes:
      - '/home/${USER}/Development/repos/${PROJECT_ID}:/home/node/app'
    depends_on:
      - 'db'
    command: '/home/node/start.sh'
volumes:
  postgres-data:
  redis-data:
networks:
  basicbridge:
    driver: bridge
    ipam:
      config:
        - subnet: 10.8.0.0/16
          gateway: 10.8.0.1
